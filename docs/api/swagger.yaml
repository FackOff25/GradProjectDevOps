openapi: 3.0.1
info:
  title: Документация API между клиентом и беком для Go Explore
  version: 0.0.1
servers:
  - url: http://go-explore.ru/api/v1
    description: Prod
  - url: http://go-explore.online/api/v1
    description: Dev
tags:
  - name: places
    description: API для работы с местами
  - name: suggest
    description: API для работы с предложкой
paths:
  /places/list:
    get:
      tags:
        - places
      summary: "Информация по местам"
      responses:
        200:
          $ref: '#/components/responses/PlacesResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/Internal'
  /places/info:
    get:
      tags:
        - places
      summary: "Информация по месту"
      parameters:
        - in: query
          name: place_id
          schema:
            type: string
            example: ChIJfRJDflpKtUYRl0UbgcrmUUk
          required: true
          description: google api place id
      responses:
        200:
          $ref: '#/components/responses/PlaceInfoResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/Internal'
  /suggest/nearby:
    get:
      tags:
        - suggest
      summary: "Предложка ближайших мест"
      parameters:
        - in: query
          name: location
          schema:
            type: string
            example: 55.7520233,37.6174994
          required: true
          description: client's location
        - in: query
          name: radius
          schema:
            type: string
            example: 50000
            default: 5000
          required: false
          description: search radius in meters
        - in: query
          name: limit
          schema:
            type: number
            example: 20
            default: 20
          required: false
          description: Numper of places in response
        - in: query
          name: offset
          schema:
            type: number
            example: 20
            default: 0
          required: false
          description: Offset of places in response
        - in: query
          name: types
          schema:
            type: string
            example: Музей,Парк
          required: false
          description: List of specified categories to search among (if omit search in all), separated by comma
        - in: header
          name: X-UUID
          schema:
            type: string
            example: 7d249c01-6844-4a99-b4ed-479bf2e5a639
          required: true
          description: Offset of places in response
      responses:
        200:
          $ref: '#/components/responses/NearbyPlacesResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/Internal'
  /suggest/user/new:
    post:
      tags:
        - suggest
      summary: "Регистрация нового пользователя"
      parameters:
        - in: header
          name: X-UUID
          schema:
            type: string
            example: 7d249c01-6844-4a99-b4ed-479bf2e5a639
          required: true
          description: Offset of places in response
      responses:
        200:
          $ref: '#/components/responses/OK'
        400:
          $ref: '#/components/responses/BadRequest'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/Internal'
  /suggest/reaction:
    post:
      tags:
        - suggest
      summary: "Реакция на место"
      parameters:
        - in: header
          name: X-UUID
          schema:
            type: string
            example: 7d249c01-6844-4a99-b4ed-479bf2e5a639
          required: true
          description: Offset of places in response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceReaction'
      responses:
        200:
          $ref: '#/components/responses/OK'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/Internal'
  /suggest/ping:
    get:
      tags:
        - suggest
      summary: "Ping"
      responses:
        200:
          $ref: '#/components/responses/OK'
          
  /suggest/route:
    post:
      tags:
        - suggest
      summary: "Запрос маршрута"
      requestBody:
        $ref: '#/components/requestBodies/RouteRequestBody'
      responses:
        200:
          $ref: '#/components/responses/RouteResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/Internal'
  /suggest/route/sortPlaces:
    post:
      tags:
        - suggest
      summary: "Сортировка мест для оптимального маршрута"
      requestBody:
        $ref: '#/components/requestBodies/SortPlacesBody'
      responses:
        200:
          $ref: '#/components/responses/SortPlacesResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/Internal'
  /suggest/categories/list:
    get:
      tags:
        - suggest
      summary: "Получение используемых категорий (типов) мест"
      responses:
        200:
          $ref: '#/components/responses/CategoriesListResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/Internal'
components:
  schemas:
    PlaceReaction:
      type: object
      properties:
        place_id:
          type: string
          example: ChIJfRJDflpKtUYRl0UbgcrmUUk
        reaction:
          type: string
          description: reaction to place
          enum: [like, unlike, visited, unvisited, refuse, unrefuse]
          example: visited
    Coordinates:
      type: object
      properties:
        lat: 
          type: number
          example: -33.866489
          description: Latitude in decimal degrees
        lng: 
          type: number
          example: 151.1958561
          description: Longitude in decimal degrees
    Place:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 7d249c01-6844-4a99-b4ed-479bf2e5a639
          description: Place UUID
        name:
          type: string
          example: Московский Кремль
          description: Place's name
        cover:
          type: string
          example: https://lh5.googleusercontent.com/p/AF1QipMImrKNC6PKPQrUEI4GvXoqyhF05Pbk7CkYNXZ1=w408-h255-k-no
          description: Place's cover image url
        rating:
          type: number
          example: 4.7
          description: Place's rating
        rating_count:
          type: integer
          example: 54861
          description: Number of rates
        location:
          $ref: '#/components/schemas/Coordinates'
    PlaceInfo:
      type: object
      properties:
        place_id:
          type: string
          format: string
          example: ChIJfRJDflpKtUYRl0UbgcrmUUk
          description: Places API id
        name:
          type: string
          example: Государственный исторический музей
          description: Place's name
        rating:
          type: number
          example: 4.6
          description: Place's rating
        rating_count:
          type: integer
          example: 2039
          description: Number of rates
        location:
          $ref: '#/components/schemas/Coordinates'
        description:
          type: string
          example: "Музей в здании 1881 года: древние реликвии, произведения искусства из коллекции Романовых и многое другое."
          description: Place's description (seems to abscent most of time)
        photos:
          type: array
          items:
            type: string
            example: https://lh5.googleusercontent.com/p/AF1QipMImrKNC6PKPQrUEI4GvXoqyhF05Pbk7CkYNXZ1=w408-h255-k-no
          description: Place's photos
        address:
          type: string
          example: Красная пл., 1, Москва, Россия, 109012
          description: Place's address
        workingHours:
          type: array
          items:
            type: string
            example: "среда: 10:00–18:00"
            description: "Place's workingHours in format \"Day: startTime-endTime\""
        tags:
          type: array
          items:
            type: string
            example: Музей
          description: list of place's tags
        reactions:
          type: array
          items:
            type: string
            description: reaction to place
            enum: [like, visited]
            example: visited
    NearbyPlace:
      type: object
      properties:
        place_id:
          type: string
          format: string
          example: ChIJgUbEo8cfqokR5lP9_Wh_DaM
          description: Places API id
        name:
          type: string
          example: Московский Кремль
          description: Place's name
        location:
          $ref: '#/components/schemas/Coordinates'
        cover:
          type: string
          example: https://lh5.googleusercontent.com/p/AF1QipMImrKNC6PKPQrUEI4GvXoqyhF05Pbk7CkYNXZ1=w408-h255-k-no
          description: Place's cover image url
        rating:
          type: number
          example: 4.6
          description: Place's rating
        rating_count:
          type: integer
          example: 2039
          description: Number of rates
        reactions:
          type: array
          items:
            type: string
            description: reaction to place
            enum: [like, visited]
            example: visited
    TravelType:
      description: a way how to
      enum: [DRIVE, BICYCLE, WALK, TWO_WHEELER, TRANSIT]
      default: DRIVE
      example: DRIVE
    TravelWaypoint:
      description: travel waypoint
      type: object
      properties:
        place_id:
          type: string
          format: string
          example: ChIJgUbEo8cfqokR5lP9_Wh_DaM
          description: Places API id
        location:
          $ref: '#/components/schemas/Coordinates'
    P2PRoute:
      type: object
      properties:
        polyline:
          type: string
          description: Route's polyline
          example: ipkcFfichVnP@j@BLoFVwM{E?
  requestBodies:
    RouteRequestBody:
      required: true
      description: Route request body
      content:
        application/json:
          schema:
            type: object
            properties:
              travel_mode:
                $ref: '#/components/schemas/TravelType'
              start:
                $ref: '#/components/schemas/Coordinates'
              end:
                $ref: '#/components/schemas/Coordinates'
              waypoints:
                type: array
                items:
                   $ref: '#/components/schemas/TravelWaypoint'
    SortPlacesBody:
      required: true
      description: Sort places request body
      content:
        application/json:
          schema:
            type: object
            properties:
              start:
                $ref: '#/components/schemas/Coordinates'
              end:
                $ref: '#/components/schemas/Coordinates'
              waypoints:
                type: array
                items:
                   $ref: '#/components/schemas/Coordinates'
  responses:
    PlacesResponse:
      description: Places OK responses
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Place'
    PlaceInfoResponse:
      description: Place Info OK responses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlaceInfo'
    NearbyPlacesResponse:
      description: Nearby places OK responses
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NearbyPlace'
    RouteResponse:
      description: Route OK responses
      content:
        application/json:
          schema:
            type: object
            properties:
              travel_mode:
                $ref: '#/components/schemas/TravelType'
              route:
                type: array
                items:
                  $ref: '#/components/schemas/P2PRoute'
    SortPlacesResponse:
      description: Sort places OK responses
      content:
        application/json:
          schema:
            type: object
            properties:
              places:
                type: array
                items: 
                  $ref: '#/components/schemas/Coordinates'
    CategoriesListResponse:
      description: Categories list OK responses
      content:
        application/json:
          schema:
            type: object
            properties:
              categories:
                type: array
                items: 
                  type: string
                  example: Музей
    OK:
      description: OK
      content:
        application/json:
          examples:
            OK:
              value:
                result: OK
    BadRequest:
      description: Bad request
      content:
        application/json:
          examples:
            BAD/REQUEST:
              value:
                error: BAD/REQUEST
    NotFound:
      description: Resource not found
      content:
        application/json:
          examples:
            NOT/FOUND:
              value:
                error: NOT/FOUND
    Internal:
      description: Internal server error
      content:
        application/json:
          example:
            error: INTERNAL
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          example:
            error: UNAUTHORIZED
    Conflict:
      description: Conflict
      content:
        application/json:
          example:
            error: CONFLICT
            
